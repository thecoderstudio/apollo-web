// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linpeas correctly renders 1`] = `
.c1 {
  height: 100%;
  width: 100%;
  padding: 20px;
}

.c2 {
  height: 100%;
  width: 100%;
}

.c2 .xterm-viewport {
  overflow: hidden !important;
}

.c0 {
  height: 100%;
}

<div>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Component
      theme={
        Object {
          "accent": "#4D02EE",
          "black": "#181818",
          "boxShadow": "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
          "connectedColor": "#27AE60",
          "connectingColor": "#F39C12",
          "darkGrey": "#3E3E3E",
          "darkWhite": "#F1F1F1",
          "disconnectedColor": "#C0392B",
          "error": "#ED3E2A",
          "green": "#32E67E",
          "inactive": "#363636",
          "lightBlack": "#1B1B1B",
          "name": "dark",
          "overlay": "rgba(37, 37, 37, 0.6)",
          "primary": "#02A3EE",
          "red": "#ED3E2A",
          "selectedBlack": "#252525",
          "smallTextSize": "0.85rem",
          "warning": "#ED852A",
          "white": "#F8F8F8",
        }
      }
    >
      <Connect(Linpeas)
        match={
          Object {
            "params": Object {
              "agentId": "fakeid",
            },
          }
        }
      >
        <Linpeas
          agents={
            Map {
              "fakeid" => Object {
                "connectionState": "connected",
                "id": "fakeid",
                "name": "fake",
              },
            }
          }
          dispatch={[Function]}
          match={
            Object {
              "params": Object {
                "agentId": "fakeid",
              },
            }
          }
        >
          <styled.div>
            <div
              className="c0"
            >
              <Connect(TerminalPage)
                agentEndpoint="action/linpeas"
                agents={
                  Map {
                    "fakeid" => Object {
                      "connectionState": "connected",
                      "id": "fakeid",
                      "name": "fake",
                    },
                  }
                }
                dispatch={[Function]}
                match={
                  Object {
                    "params": Object {
                      "agentId": "fakeid",
                    },
                  }
                }
                onSocketClose={[Function]}
                readOnly={true}
              >
                <TerminalPage
                  agentEndpoint="action/linpeas"
                  agents={
                    Map {
                      "fakeid" => Object {
                        "connectionState": "connected",
                        "id": "fakeid",
                        "name": "fake",
                      },
                    }
                  }
                  dispatch={[Function]}
                  match={
                    Object {
                      "params": Object {
                        "agentId": "fakeid",
                      },
                    }
                  }
                  onSocketClose={[Function]}
                  readOnly={true}
                >
                  <WithTheme(Terminal)
                    agent={
                      Object {
                        "connectionState": "connected",
                        "id": "fakeid",
                        "name": "fake",
                      }
                    }
                    agentEndpoint="action/linpeas"
                    onSocketClose={[Function]}
                    readOnly={true}
                  >
                    <Terminal
                      agent={
                        Object {
                          "connectionState": "connected",
                          "id": "fakeid",
                          "name": "fake",
                        }
                      }
                      agentEndpoint="action/linpeas"
                      onSocketClose={[Function]}
                      readOnly={true}
                      theme={
                        Object {
                          "accent": "#4D02EE",
                          "black": "#181818",
                          "boxShadow": "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
                          "connectedColor": "#27AE60",
                          "connectingColor": "#F39C12",
                          "darkGrey": "#3E3E3E",
                          "darkWhite": "#F1F1F1",
                          "disconnectedColor": "#C0392B",
                          "error": "#ED3E2A",
                          "green": "#32E67E",
                          "inactive": "#363636",
                          "lightBlack": "#1B1B1B",
                          "name": "dark",
                          "overlay": "rgba(37, 37, 37, 0.6)",
                          "primary": "#02A3EE",
                          "red": "#ED3E2A",
                          "selectedBlack": "#252525",
                          "smallTextSize": "0.85rem",
                          "warning": "#ED852A",
                          "white": "#F8F8F8",
                        }
                      }
                    >
                      <styled.div>
                        <div
                          className="c1"
                        >
                          <styled.div
                            data-testid="terminal"
                          >
                            <div
                              className="c2"
                              data-testid="terminal"
                            />
                          </styled.div>
                        </div>
                      </styled.div>
                    </Terminal>
                  </WithTheme(Terminal)>
                </TerminalPage>
              </Connect(TerminalPage)>
            </div>
          </styled.div>
        </Linpeas>
      </Connect(Linpeas)>
    </Component>
  </Provider>
</div>
`;
