// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inline terminal correctly renders connected 1`] = `
.c0 {
  box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);
  padding: 40px;
  border-radius: 10px;
  background-color: #1B1B1B;
}

.c2 {
  max-height: 50px;
  padding: 12px;
  border: none;
  background-color: #4D02EE;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
}

.c2:hover {
  opacity: 0.90;
}

.c2:focus {
  outline: none;
}

.c2:active {
  opacity: 0.80;
}

.c3 {
  background-color: transparent;
  border: 1px solid #4D02EE;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 400px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 16px 0px 16px 16px;
  height: 24px;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

<div>
  <Component
    theme={
      Object {
        "accent": "#4D02EE",
        "black": "#181818",
        "connectedColor": "#27AE60",
        "connectingColor": "#F39C12",
        "darkGrey": "#3E3E3E",
        "darkWhite": "#F1F1F1",
        "disconnectedColor": "#C0392B",
        "error": "#ED3E2A",
        "green": "#32E67E",
        "inactive": "#363636",
        "lightBlack": "#1B1B1B",
        "name": "dark",
        "overlay": "rgba(37, 37, 37, 0.6)",
        "primary": "#02A3EE",
        "red": "#ED3E2A",
        "warning": "#ED852A",
        "white": "#F8F8F8",
      }
    }
  >
    <InlineTerminal
      agent={
        Object {
          "connectionState": "connected",
          "id": "fakeid",
          "name": "agentName",
        }
      }
    >
      <div>
        <Styled(styled.div)>
          <div
            className="c0 c1"
          >
            <div>
              <h2>
                connected
              </h2>
              <Styled(styled.button)
                onClick={[Function]}
              >
                <button
                  className="c2 c3"
                  onClick={[Function]}
                >
                  Open shell
                </button>
              </Styled(styled.button)>
            </div>
          </div>
        </Styled(styled.div)>
        <styled.div>
          <div
            className="c4"
          />
        </styled.div>
      </div>
    </InlineTerminal>
  </Component>
</div>
`;

exports[`inline terminal correctly renders connected 2`] = `
.c0 {
  box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);
  padding: 40px;
  border-radius: 10px;
  background-color: #1B1B1B;
}

.c3 {
  height: 100%;
  width: 100%;
  padding: 20px;
}

.c4 {
  height: 100%;
  width: 100%;
}

.c4 .xterm-viewport {
  overflow: hidden !important;
}

.c6 {
  cursor: pointer;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 400px;
}

.c2 {
  padding: 0px;
  height: 100%;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 16px 0px 16px 16px;
  height: 24px;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.c7 {
  color: #ED3E2A;
}

<div>
  <Component
    theme={
      Object {
        "accent": "#4D02EE",
        "black": "#181818",
        "connectedColor": "#27AE60",
        "connectingColor": "#F39C12",
        "darkGrey": "#3E3E3E",
        "darkWhite": "#F1F1F1",
        "disconnectedColor": "#C0392B",
        "error": "#ED3E2A",
        "green": "#32E67E",
        "inactive": "#363636",
        "lightBlack": "#1B1B1B",
        "name": "dark",
        "overlay": "rgba(37, 37, 37, 0.6)",
        "primary": "#02A3EE",
        "red": "#ED3E2A",
        "warning": "#ED852A",
        "white": "#F8F8F8",
      }
    }
  >
    <InlineTerminal
      agent={
        Object {
          "connectionState": "connected",
          "id": "fakeid",
          "name": "agentName",
        }
      }
    >
      <div>
        <Styled(styled.div)>
          <div
            className="c0 c1"
          >
            <Styled(WithTheme(Terminal))
              agent={
                Object {
                  "connectionState": "connected",
                  "id": "fakeid",
                  "name": "agentName",
                }
              }
            >
              <WithTheme(Terminal)
                agent={
                  Object {
                    "connectionState": "connected",
                    "id": "fakeid",
                    "name": "agentName",
                  }
                }
                className="c2"
              >
                <Terminal
                  agent={
                    Object {
                      "connectionState": "connected",
                      "id": "fakeid",
                      "name": "agentName",
                    }
                  }
                  className="c2"
                  theme={
                    Object {
                      "accent": "#4D02EE",
                      "black": "#181818",
                      "connectedColor": "#27AE60",
                      "connectingColor": "#F39C12",
                      "darkGrey": "#3E3E3E",
                      "darkWhite": "#F1F1F1",
                      "disconnectedColor": "#C0392B",
                      "error": "#ED3E2A",
                      "green": "#32E67E",
                      "inactive": "#363636",
                      "lightBlack": "#1B1B1B",
                      "name": "dark",
                      "overlay": "rgba(37, 37, 37, 0.6)",
                      "primary": "#02A3EE",
                      "red": "#ED3E2A",
                      "warning": "#ED852A",
                      "white": "#F8F8F8",
                    }
                  }
                >
                  <styled.div
                    className="c2"
                  >
                    <div
                      className="c3 c2"
                    >
                      <styled.div
                        data-testid="terminal"
                      >
                        <div
                          className="c4"
                          data-testid="terminal"
                        />
                      </styled.div>
                    </div>
                  </styled.div>
                </Terminal>
              </WithTheme(Terminal)>
            </Styled(WithTheme(Terminal))>
          </div>
        </Styled(styled.div)>
        <styled.div>
          <div
            className="c5"
          >
            <Styled(styled.i)
              active={true}
              className="material-icons"
              onClick={[Function]}
            >
              <i
                className="c6 c7 material-icons"
                onClick={[Function]}
              >
                clear
              </i>
            </Styled(styled.i)>
          </div>
        </styled.div>
      </div>
    </InlineTerminal>
  </Component>
</div>
`;

exports[`inline terminal correctly renders connecting 1`] = `
.c0 {
  box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);
  padding: 40px;
  border-radius: 10px;
  background-color: #1B1B1B;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 400px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 16px 0px 16px 16px;
  height: 24px;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

<div>
  <Component
    theme={
      Object {
        "accent": "#4D02EE",
        "black": "#181818",
        "connectedColor": "#27AE60",
        "connectingColor": "#F39C12",
        "darkGrey": "#3E3E3E",
        "darkWhite": "#F1F1F1",
        "disconnectedColor": "#C0392B",
        "error": "#ED3E2A",
        "green": "#32E67E",
        "inactive": "#363636",
        "lightBlack": "#1B1B1B",
        "name": "dark",
        "overlay": "rgba(37, 37, 37, 0.6)",
        "primary": "#02A3EE",
        "red": "#ED3E2A",
        "warning": "#ED852A",
        "white": "#F8F8F8",
      }
    }
  >
    <InlineTerminal
      agent={
        Object {
          "connectionState": "connecting",
          "id": "fakeid",
          "name": "agentName",
        }
      }
    >
      <div>
        <Styled(styled.div)>
          <div
            className="c0 c1"
          >
            <div>
              <h2>
                connecting
              </h2>
            </div>
          </div>
        </Styled(styled.div)>
        <styled.div>
          <div
            className="c2"
          />
        </styled.div>
      </div>
    </InlineTerminal>
  </Component>
</div>
`;

exports[`inline terminal correctly renders disconnected 1`] = `
.c0 {
  box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);
  padding: 40px;
  border-radius: 10px;
  background-color: #1B1B1B;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 400px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 16px 0px 16px 16px;
  height: 24px;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

<div>
  <Component
    theme={
      Object {
        "accent": "#4D02EE",
        "black": "#181818",
        "connectedColor": "#27AE60",
        "connectingColor": "#F39C12",
        "darkGrey": "#3E3E3E",
        "darkWhite": "#F1F1F1",
        "disconnectedColor": "#C0392B",
        "error": "#ED3E2A",
        "green": "#32E67E",
        "inactive": "#363636",
        "lightBlack": "#1B1B1B",
        "name": "dark",
        "overlay": "rgba(37, 37, 37, 0.6)",
        "primary": "#02A3EE",
        "red": "#ED3E2A",
        "warning": "#ED852A",
        "white": "#F8F8F8",
      }
    }
  >
    <InlineTerminal
      agent={
        Object {
          "connectionState": "disconnected",
          "id": "fakeid",
          "name": "agentName",
        }
      }
    >
      <div>
        <Styled(styled.div)>
          <div
            className="c0 c1"
          >
            <div>
              <h2>
                disconnected
              </h2>
            </div>
          </div>
        </Styled(styled.div)>
        <styled.div>
          <div
            className="c2"
          />
        </styled.div>
      </div>
    </InlineTerminal>
  </Component>
</div>
`;

exports[`inline terminal disconnects 1`] = `
.c0 {
  box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);
  padding: 40px;
  border-radius: 10px;
  background-color: #1B1B1B;
}

.c2 {
  max-height: 50px;
  padding: 12px;
  border: none;
  background-color: #4D02EE;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
}

.c2:hover {
  opacity: 0.90;
}

.c2:focus {
  outline: none;
}

.c2:active {
  opacity: 0.80;
}

.c3 {
  background-color: transparent;
  border: 1px solid #4D02EE;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 400px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 16px 0px 16px 16px;
  height: 24px;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

<div>
  <Component
    theme={
      Object {
        "accent": "#4D02EE",
        "black": "#181818",
        "connectedColor": "#27AE60",
        "connectingColor": "#F39C12",
        "darkGrey": "#3E3E3E",
        "darkWhite": "#F1F1F1",
        "disconnectedColor": "#C0392B",
        "error": "#ED3E2A",
        "green": "#32E67E",
        "inactive": "#363636",
        "lightBlack": "#1B1B1B",
        "name": "dark",
        "overlay": "rgba(37, 37, 37, 0.6)",
        "primary": "#02A3EE",
        "red": "#ED3E2A",
        "warning": "#ED852A",
        "white": "#F8F8F8",
      }
    }
  >
    <InlineTerminal
      agent={
        Object {
          "connectionState": "connected",
          "id": "fakeid",
          "name": "agentName",
        }
      }
    >
      <div>
        <Styled(styled.div)>
          <div
            className="c0 c1"
          >
            <div>
              <h2>
                connected
              </h2>
              <Styled(styled.button)
                onClick={[Function]}
              >
                <button
                  className="c2 c3"
                  onClick={[Function]}
                >
                  Open shell
                </button>
              </Styled(styled.button)>
            </div>
          </div>
        </Styled(styled.div)>
        <styled.div>
          <div
            className="c4"
          />
        </styled.div>
      </div>
    </InlineTerminal>
  </Component>
</div>
`;
