// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`create Agent closes modal correctly 1`] = `
.c6 {
  position: relative;
}

.c8 {
  border: none;
  border-radius: 5px;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  padding: 15px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.c9 {
  border-color: white transparent;
  border-style: solid;
  float: right;
  margin-top: 5px;
  border-width: 7px 7px 0px 7px;
  height: 0px;
  width: 0px;
  margin-left: 10px;
  -webkit-transform: rotate(0);
  -ms-transform: rotate(0);
  transform: rotate(0);
  -webkit-transition: -webkit-transform 0.3s;
  -webkit-transition: transform 0.3s;
  transition: transform 0.3s;
}

.c12 {
  max-height: 50px;
  padding: 12px;
  border: none;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
  width: 100%;
  height: 50px;
  margin: auto;
  display: block;
}

.c12:hover {
  opacity: 0.90;
}

.c12:focus {
  outline: none;
}

.c12:active {
  opacity: 0.80;
}

.c12:disabled:hover {
  opacity: 1;
  cursor: auto;
}

.c3 {
  height: 80px;
}

.c5 {
  min-height: 50px;
  width: 100%;
  border: none;
  border-radius: 5px;
  font-family: 'Libre Franklin',sans-serif;
  font-size: 1rem;
  padding-left: 10px;
  opacity: 0.9;
  border: 1px solid transparent;
}

.c5:focus {
  outline: none;
  border: 1px solid;
}

.c10 {
  display: grid;
  grid-template-columns: 50% 50%;
  margin: 20px 0px 20px 0px;
}

.c0 {
  display: grid;
  width: 100%;
  grid-template-columns: [text] 50% [dropdown] 50%;
  height: 100px;
}

.c2 {
  grid-column: dropdown;
}

.c7 {
  width: 200px;
  float: right;
}

.c1 {
  grid-column: text;
  line-height: 75px;
  margin-top: 0px;
  margin-bottom: 0px;
}

.c13 {
  width: 200px;
  height: 50px;
  margin: auto;
  display: block;
}

.c4 {
  font-family: 'B612',sans-serif;
  font-weight: 600;
  width: 200px;
  float: right;
}

.c11 {
  max-height: 50px;
  padding: 12px;
  border: none;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
  background-color: transparent;
  border: 1px solid;
  width: 200px;
  height: 50px;
  margin: auto;
  display: block;
}

.c11:hover {
  opacity: 0.90;
}

.c11:focus {
  outline: none;
}

.c11:active {
  opacity: 0.80;
}

.c11:disabled:hover {
  opacity: 1;
  cursor: auto;
}

@media (max-width:47.9375em) {
  .c10 {
    grid-template-columns: [column-one] 100%;
    grid-template-rows: [row-one] 1fr [row-two] 1fr;
  }
}

@media (max-width:47.9375em) {
  .c0 {
    height: 120px;
    grid-template-columns: [column-one] 100%;
    grid-template-rows: [text] 30px [dropdown] 85px;
  }
}

@media (max-width:47.9375em) {
  .c2 {
    grid-column: column-one;
    grid-row: dropdown;
    width: 100%;
  }
}

@media (max-width:47.9375em) {
  .c7 {
    width: 100%;
  }
}

@media (max-width:47.9375em) {
  .c1 {
    width: 100%;
    line-height: 100%;
    grid-column: column-one;
    grid-row: text;
  }
}

@media (max-width:47.9375em) {
  .c13 {
    width: 100%;
    margin-top: 15px;
  }
}

@media (max-width:47.9375em) {
  .c4 {
    width: 100%;
    grid-row: row-two;
  }
}

@media (max-width:47.9375em) {
  .c11 {
    width: 100%;
    grid-row: row-two;
  }
}

<form
  onSubmit={[Function]}
>
  <div
    className="c0"
  >
    <p
      className="c1"
    >
      Agent name
    </p>
    <div
      className="c2"
    >
      <div
        className="c3 c4"
      >
        <input
          className="c5"
          name="name"
          onChange={[Function]}
          placeholder="007"
          type="name"
          value=""
        />
      </div>
    </div>
  </div>
  <div
    className="c0"
  >
    <p
      className="c1"
    >
      Operating system
    </p>
    <div
      className="c2"
    >
      <div
        className="c6 c7"
      >
        <div
          className="c8"
          id="dropdown"
          onClick={[Function]}
        >
          linux
          <div
            className="c9"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="c0"
  >
    <p
      className="c1"
    >
      Architecture
    </p>
    <div
      className="c2"
    >
      <div
        className="c6 c7"
      >
        <div
          className="c8"
          id="dropdown"
          onClick={[Function]}
        >
          amd64
          <div
            className="c9"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="c10"
  >
    <button
      className="c11"
      id="closeButton"
      onClick={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      type="button"
    >
      Cancel
    </button>
    <button
      className="c12 c13"
      onClick={null}
    >
      Create agent
    </button>
  </div>
</form>
`;

exports[`create Agent renders correctly 1`] = `
.c6 {
  position: relative;
}

.c8 {
  border: none;
  border-radius: 5px;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  padding: 15px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.c9 {
  border-color: white transparent;
  border-style: solid;
  float: right;
  margin-top: 5px;
  border-width: 7px 7px 0px 7px;
  height: 0px;
  width: 0px;
  margin-left: 10px;
  -webkit-transform: rotate(0);
  -ms-transform: rotate(0);
  transform: rotate(0);
  -webkit-transition: -webkit-transform 0.3s;
  -webkit-transition: transform 0.3s;
  transition: transform 0.3s;
}

.c12 {
  max-height: 50px;
  padding: 12px;
  border: none;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
  width: 100%;
  height: 50px;
  margin: auto;
  display: block;
}

.c12:hover {
  opacity: 0.90;
}

.c12:focus {
  outline: none;
}

.c12:active {
  opacity: 0.80;
}

.c12:disabled:hover {
  opacity: 1;
  cursor: auto;
}

.c3 {
  height: 80px;
}

.c5 {
  min-height: 50px;
  width: 100%;
  border: none;
  border-radius: 5px;
  font-family: 'Libre Franklin',sans-serif;
  font-size: 1rem;
  padding-left: 10px;
  opacity: 0.9;
  border: 1px solid transparent;
}

.c5:focus {
  outline: none;
  border: 1px solid;
}

.c10 {
  display: grid;
  grid-template-columns: 50% 50%;
  margin: 20px 0px 20px 0px;
}

.c0 {
  display: grid;
  width: 100%;
  grid-template-columns: [text] 50% [dropdown] 50%;
  height: 100px;
}

.c2 {
  grid-column: dropdown;
}

.c7 {
  width: 200px;
  float: right;
}

.c1 {
  grid-column: text;
  line-height: 75px;
  margin-top: 0px;
  margin-bottom: 0px;
}

.c13 {
  width: 200px;
  height: 50px;
  margin: auto;
  display: block;
}

.c4 {
  font-family: 'B612',sans-serif;
  font-weight: 600;
  width: 200px;
  float: right;
}

.c11 {
  max-height: 50px;
  padding: 12px;
  border: none;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
  background-color: transparent;
  border: 1px solid;
  width: 200px;
  height: 50px;
  margin: auto;
  display: block;
}

.c11:hover {
  opacity: 0.90;
}

.c11:focus {
  outline: none;
}

.c11:active {
  opacity: 0.80;
}

.c11:disabled:hover {
  opacity: 1;
  cursor: auto;
}

@media (max-width:47.9375em) {
  .c10 {
    grid-template-columns: [column-one] 100%;
    grid-template-rows: [row-one] 1fr [row-two] 1fr;
  }
}

@media (max-width:47.9375em) {
  .c0 {
    height: 120px;
    grid-template-columns: [column-one] 100%;
    grid-template-rows: [text] 30px [dropdown] 85px;
  }
}

@media (max-width:47.9375em) {
  .c2 {
    grid-column: column-one;
    grid-row: dropdown;
    width: 100%;
  }
}

@media (max-width:47.9375em) {
  .c7 {
    width: 100%;
  }
}

@media (max-width:47.9375em) {
  .c1 {
    width: 100%;
    line-height: 100%;
    grid-column: column-one;
    grid-row: text;
  }
}

@media (max-width:47.9375em) {
  .c13 {
    width: 100%;
    margin-top: 15px;
  }
}

@media (max-width:47.9375em) {
  .c4 {
    width: 100%;
    grid-row: row-two;
  }
}

@media (max-width:47.9375em) {
  .c11 {
    width: 100%;
    grid-row: row-two;
  }
}

<form
  onSubmit={[Function]}
>
  <div
    className="c0"
  >
    <p
      className="c1"
    >
      Agent name
    </p>
    <div
      className="c2"
    >
      <div
        className="c3 c4"
      >
        <input
          className="c5"
          name="name"
          onChange={[Function]}
          placeholder="007"
          type="name"
          value=""
        />
      </div>
    </div>
  </div>
  <div
    className="c0"
  >
    <p
      className="c1"
    >
      Operating system
    </p>
    <div
      className="c2"
    >
      <div
        className="c6 c7"
      >
        <div
          className="c8"
          id="dropdown"
          onClick={[Function]}
        >
          linux
          <div
            className="c9"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="c0"
  >
    <p
      className="c1"
    >
      Architecture
    </p>
    <div
      className="c2"
    >
      <div
        className="c6 c7"
      >
        <div
          className="c8"
          id="dropdown"
          onClick={[Function]}
        >
          amd64
          <div
            className="c9"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="c10"
  >
    <button
      className="c11"
      id="closeButton"
      onClick={[MockFunction]}
      type="button"
    >
      Cancel
    </button>
    <button
      className="c12 c13"
      onClick={null}
    >
      Create agent
    </button>
  </div>
</form>
`;
