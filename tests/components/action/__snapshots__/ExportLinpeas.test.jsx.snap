// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`export linpeas handles input failure 1`] = `
.c10 {
  max-height: 50px;
  padding: 12px;
  border: none;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
}

.c10:hover {
  opacity: 0.90;
}

.c10:focus {
  outline: none;
}

.c10:active {
  opacity: 0.80;
}

.c10:disabled:hover {
  opacity: 1;
  cursor: auto;
}

.c11 {
  background-color: transparent;
  border: 1px solid;
}

.c1 {
  padding: 40px;
  border-radius: 10px;
}

.c0 {
  display: inline;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
}

.c2 {
  position: absolute;
  left: 0;
  right: 0;
  top: 50%;
  margin-left: auto;
  margin-right: auto;
  min-height: 250px;
  width: 100%;
  max-width: 400px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.c3 {
  text-align: center;
}

.c4 {
  height: 100%;
  display: grid;
  grid-template-rows: auto;
  grid-row-gap: 20px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
}

.c9> button {
  min-width: 150px;
  margin: 16px 0px;
}

.c5 {
  height: 80px;
}

.c6 {
  min-height: 50px;
  width: 100%;
  border: none;
  border-radius: 5px;
  font-family: 'Libre Franklin',sans-serif;
  font-size: 1rem;
  padding-left: 10px;
  opacity: 0.9;
  border: 1px solid;
}

.c6:focus {
  outline: none;
  border: 1px solid;
}

.c7 {
  margin-top: 5px;
  font-size: 0.9rem;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@media (max-width:47.9375em) {
  .c9 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

<div
  className="c0"
  onClick={[Function]}
>
  <div
    className="c1 c2"
  >
    <h2
      className="c3"
    >
      Export report
    </h2>
    <form
      className="c4"
      onSubmit={[Function]}
    >
      <div>
        <div>
          <h4>
            Filename
          </h4>
          <div
            className="c5"
          >
            <input
              className="c6"
              name="filename"
              onChange={[Function]}
              placeholder="LinPEAS-test.txt"
              value=""
            />
            <p
              className="c7"
            >
              Wrong filename
            </p>
          </div>
        </div>
        <div
          className="c8"
        >
          <h4>
            ANSI
          </h4>
          <div
            style={
              Object {
                "MozTransition": "opacity 0.25s",
                "MozUserSelect": "none",
                "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                "WebkitTransition": "opacity 0.25s",
                "WebkitUserSelect": "none",
                "borderRadius": 14,
                "direction": "ltr",
                "display": "inline-block",
                "msUserSelect": "none",
                "opacity": 1,
                "position": "relative",
                "textAlign": "left",
                "touchAction": "none",
                "transition": "opacity 0.25s",
                "userSelect": "none",
              }
            }
          >
            <div
              className="react-switch-bg"
              onClick={[Function]}
              onMouseDown={[Function]}
              style={
                Object {
                  "MozTransition": "background 0.25s",
                  "WebkitTransition": "background 0.25s",
                  "background": "#888888",
                  "borderRadius": 14,
                  "cursor": "pointer",
                  "height": 28,
                  "margin": 0,
                  "position": "relative",
                  "transition": "background 0.25s",
                  "width": 56,
                }
              }
            >
              <div
                style={
                  Object {
                    "MozTransition": "opacity 0.25s",
                    "WebkitTransition": "opacity 0.25s",
                    "height": 28,
                    "opacity": 0,
                    "pointerEvents": "none",
                    "position": "relative",
                    "transition": "opacity 0.25s",
                    "width": 30,
                  }
                }
              >
                <svg
                  height="100%"
                  style={
                    Object {
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                  viewBox="-2 -5 17 21"
                  width="100%"
                >
                  <path
                    d="M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0"
                    fill="#fff"
                    fillRule="evenodd"
                  />
                </svg>
              </div>
              <div
                style={
                  Object {
                    "MozTransition": "opacity 0.25s",
                    "WebkitTransition": "opacity 0.25s",
                    "height": 28,
                    "opacity": 1,
                    "pointerEvents": "none",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transition": "opacity 0.25s",
                    "width": 30,
                  }
                }
              >
                <svg
                  height="100%"
                  style={
                    Object {
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                  viewBox="-2 -5 14 20"
                  width="100%"
                >
                  <path
                    d="M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12"
                    fill="#fff"
                    fillRule="evenodd"
                  />
                </svg>
              </div>
            </div>
            <div
              className="react-switch-handle"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchCancel={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "MozTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "WebkitTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "background": "#ffffff",
                  "border": 0,
                  "borderRadius": "50%",
                  "boxShadow": null,
                  "cursor": "pointer",
                  "display": "inline-block",
                  "height": 26,
                  "outline": 0,
                  "position": "absolute",
                  "top": 1,
                  "transform": "translateX(1px)",
                  "transition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "width": 26,
                }
              }
            />
            <input
              checked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyUp={[Function]}
              role="switch"
              style={
                Object {
                  "border": 0,
                  "clip": "rect(0 0 0 0)",
                  "height": 1,
                  "margin": -1,
                  "overflow": "hidden",
                  "padding": 0,
                  "position": "absolute",
                  "width": 1,
                }
              }
              type="checkbox"
            />
          </div>
        </div>
      </div>
      <div
        className="c9"
      >
        <button
          className="c10 c11"
          onClick={[Function]}
        >
          Cancel
        </button>
        <button
          className="c10"
        >
          Export
        </button>
      </div>
    </form>
  </div>
</div>
`;

exports[`export linpeas renders correctly 1`] = `
.c9 {
  max-height: 50px;
  padding: 12px;
  border: none;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
}

.c9:hover {
  opacity: 0.90;
}

.c9:focus {
  outline: none;
}

.c9:active {
  opacity: 0.80;
}

.c9:disabled:hover {
  opacity: 1;
  cursor: auto;
}

.c10 {
  background-color: transparent;
  border: 1px solid;
}

.c1 {
  padding: 40px;
  border-radius: 10px;
}

.c0 {
  display: inline;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
}

.c2 {
  position: absolute;
  left: 0;
  right: 0;
  top: 50%;
  margin-left: auto;
  margin-right: auto;
  min-height: 250px;
  width: 100%;
  max-width: 400px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.c3 {
  text-align: center;
}

.c4 {
  height: 100%;
  display: grid;
  grid-template-rows: auto;
  grid-row-gap: 20px;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
}

.c8> button {
  min-width: 150px;
  margin: 16px 0px;
}

.c5 {
  height: 80px;
}

.c6 {
  min-height: 50px;
  width: 100%;
  border: none;
  border-radius: 5px;
  font-family: 'Libre Franklin',sans-serif;
  font-size: 1rem;
  padding-left: 10px;
  opacity: 0.9;
  border: 1px solid transparent;
}

.c6:focus {
  outline: none;
  border: 1px solid;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@media (max-width:47.9375em) {
  .c8 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

<div
  className="c0"
  onClick={[Function]}
>
  <div
    className="c1 c2"
  >
    <h2
      className="c3"
    >
      Export report
    </h2>
    <form
      className="c4"
      onSubmit={[Function]}
    >
      <div>
        <div>
          <h4>
            Filename
          </h4>
          <div
            className="c5"
          >
            <input
              className="c6"
              name="filename"
              onChange={[Function]}
              placeholder="LinPEAS-test.txt"
              value=""
            />
          </div>
        </div>
        <div
          className="c7"
        >
          <h4>
            ANSI
          </h4>
          <div
            style={
              Object {
                "MozTransition": "opacity 0.25s",
                "MozUserSelect": "none",
                "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                "WebkitTransition": "opacity 0.25s",
                "WebkitUserSelect": "none",
                "borderRadius": 14,
                "direction": "ltr",
                "display": "inline-block",
                "msUserSelect": "none",
                "opacity": 1,
                "position": "relative",
                "textAlign": "left",
                "touchAction": "none",
                "transition": "opacity 0.25s",
                "userSelect": "none",
              }
            }
          >
            <div
              className="react-switch-bg"
              onClick={[Function]}
              onMouseDown={[Function]}
              style={
                Object {
                  "MozTransition": "background 0.25s",
                  "WebkitTransition": "background 0.25s",
                  "background": "#888888",
                  "borderRadius": 14,
                  "cursor": "pointer",
                  "height": 28,
                  "margin": 0,
                  "position": "relative",
                  "transition": "background 0.25s",
                  "width": 56,
                }
              }
            >
              <div
                style={
                  Object {
                    "MozTransition": "opacity 0.25s",
                    "WebkitTransition": "opacity 0.25s",
                    "height": 28,
                    "opacity": 0,
                    "pointerEvents": "none",
                    "position": "relative",
                    "transition": "opacity 0.25s",
                    "width": 30,
                  }
                }
              >
                <svg
                  height="100%"
                  style={
                    Object {
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                  viewBox="-2 -5 17 21"
                  width="100%"
                >
                  <path
                    d="M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0"
                    fill="#fff"
                    fillRule="evenodd"
                  />
                </svg>
              </div>
              <div
                style={
                  Object {
                    "MozTransition": "opacity 0.25s",
                    "WebkitTransition": "opacity 0.25s",
                    "height": 28,
                    "opacity": 1,
                    "pointerEvents": "none",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transition": "opacity 0.25s",
                    "width": 30,
                  }
                }
              >
                <svg
                  height="100%"
                  style={
                    Object {
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                  viewBox="-2 -5 14 20"
                  width="100%"
                >
                  <path
                    d="M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12"
                    fill="#fff"
                    fillRule="evenodd"
                  />
                </svg>
              </div>
            </div>
            <div
              className="react-switch-handle"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchCancel={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "MozTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "WebkitTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "background": "#ffffff",
                  "border": 0,
                  "borderRadius": "50%",
                  "boxShadow": null,
                  "cursor": "pointer",
                  "display": "inline-block",
                  "height": 26,
                  "outline": 0,
                  "position": "absolute",
                  "top": 1,
                  "transform": "translateX(1px)",
                  "transition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "width": 26,
                }
              }
            />
            <input
              checked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyUp={[Function]}
              role="switch"
              style={
                Object {
                  "border": 0,
                  "clip": "rect(0 0 0 0)",
                  "height": 1,
                  "margin": -1,
                  "overflow": "hidden",
                  "padding": 0,
                  "position": "absolute",
                  "width": 1,
                }
              }
              type="checkbox"
            />
          </div>
        </div>
      </div>
      <div
        className="c8"
      >
        <button
          className="c9 c10"
          onClick={[Function]}
        >
          Cancel
        </button>
        <button
          className="c9"
        >
          Export
        </button>
      </div>
    </form>
  </div>
</div>
`;

exports[`export linpeas validates 1`] = `
.c10 {
  max-height: 50px;
  padding: 12px;
  border: none;
  border-radius: 5px;
  color: white;
  font-family: 'B612',sans-serif;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
}

.c10:hover {
  opacity: 0.90;
}

.c10:focus {
  outline: none;
}

.c10:active {
  opacity: 0.80;
}

.c10:disabled:hover {
  opacity: 1;
  cursor: auto;
}

.c11 {
  background-color: transparent;
  border: 1px solid;
}

.c1 {
  padding: 40px;
  border-radius: 10px;
}

.c0 {
  display: inline;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
}

.c2 {
  position: absolute;
  left: 0;
  right: 0;
  top: 50%;
  margin-left: auto;
  margin-right: auto;
  min-height: 250px;
  width: 100%;
  max-width: 400px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.c3 {
  text-align: center;
}

.c4 {
  height: 100%;
  display: grid;
  grid-template-rows: auto;
  grid-row-gap: 20px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
}

.c9> button {
  min-width: 150px;
  margin: 16px 0px;
}

.c5 {
  height: 80px;
}

.c6 {
  min-height: 50px;
  width: 100%;
  border: none;
  border-radius: 5px;
  font-family: 'Libre Franklin',sans-serif;
  font-size: 1rem;
  padding-left: 10px;
  opacity: 0.9;
  border: 1px solid;
}

.c6:focus {
  outline: none;
  border: 1px solid;
}

.c7 {
  margin-top: 5px;
  font-size: 0.9rem;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@media (max-width:47.9375em) {
  .c9 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

<div
  className="c0"
  onClick={[Function]}
>
  <div
    className="c1 c2"
  >
    <h2
      className="c3"
    >
      Export report
    </h2>
    <form
      className="c4"
      onSubmit={[Function]}
    >
      <div>
        <div>
          <h4>
            Filename
          </h4>
          <div
            className="c5"
          >
            <input
              className="c6"
              name="filename"
              onChange={[Function]}
              placeholder="LinPEAS-test.txt"
              value="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
            />
            <p
              className="c7"
            >
              Max 100 characters
            </p>
          </div>
        </div>
        <div
          className="c8"
        >
          <h4>
            ANSI
          </h4>
          <div
            style={
              Object {
                "MozTransition": "opacity 0.25s",
                "MozUserSelect": "none",
                "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                "WebkitTransition": "opacity 0.25s",
                "WebkitUserSelect": "none",
                "borderRadius": 14,
                "direction": "ltr",
                "display": "inline-block",
                "msUserSelect": "none",
                "opacity": 1,
                "position": "relative",
                "textAlign": "left",
                "touchAction": "none",
                "transition": "opacity 0.25s",
                "userSelect": "none",
              }
            }
          >
            <div
              className="react-switch-bg"
              onClick={[Function]}
              onMouseDown={[Function]}
              style={
                Object {
                  "MozTransition": "background 0.25s",
                  "WebkitTransition": "background 0.25s",
                  "background": "#008800",
                  "borderRadius": 14,
                  "cursor": "pointer",
                  "height": 28,
                  "margin": 0,
                  "position": "relative",
                  "transition": "background 0.25s",
                  "width": 56,
                }
              }
            >
              <div
                style={
                  Object {
                    "MozTransition": "opacity 0.25s",
                    "WebkitTransition": "opacity 0.25s",
                    "height": 28,
                    "opacity": 1,
                    "pointerEvents": "none",
                    "position": "relative",
                    "transition": "opacity 0.25s",
                    "width": 30,
                  }
                }
              >
                <svg
                  height="100%"
                  style={
                    Object {
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                  viewBox="-2 -5 17 21"
                  width="100%"
                >
                  <path
                    d="M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0"
                    fill="#fff"
                    fillRule="evenodd"
                  />
                </svg>
              </div>
              <div
                style={
                  Object {
                    "MozTransition": "opacity 0.25s",
                    "WebkitTransition": "opacity 0.25s",
                    "height": 28,
                    "opacity": 0,
                    "pointerEvents": "none",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transition": "opacity 0.25s",
                    "width": 30,
                  }
                }
              >
                <svg
                  height="100%"
                  style={
                    Object {
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                  viewBox="-2 -5 14 20"
                  width="100%"
                >
                  <path
                    d="M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12"
                    fill="#fff"
                    fillRule="evenodd"
                  />
                </svg>
              </div>
            </div>
            <div
              className="react-switch-handle"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchCancel={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "MozTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "WebkitTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "background": "#ffffff",
                  "border": 0,
                  "borderRadius": "50%",
                  "boxShadow": null,
                  "cursor": "pointer",
                  "display": "inline-block",
                  "height": 26,
                  "outline": 0,
                  "position": "absolute",
                  "top": 1,
                  "transform": "translateX(29px)",
                  "transition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "width": 26,
                }
              }
            />
            <input
              checked={true}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyUp={[Function]}
              role="switch"
              style={
                Object {
                  "border": 0,
                  "clip": "rect(0 0 0 0)",
                  "height": 1,
                  "margin": -1,
                  "overflow": "hidden",
                  "padding": 0,
                  "position": "absolute",
                  "width": 1,
                }
              }
              type="checkbox"
            />
          </div>
        </div>
      </div>
      <div
        className="c9"
      >
        <button
          className="c10 c11"
          onClick={[Function]}
        >
          Cancel
        </button>
        <button
          className="c10"
        >
          Export
        </button>
      </div>
    </form>
  </div>
</div>
`;
